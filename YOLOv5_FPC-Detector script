# YOLOv5_FPC-Detector script utilizing the Google Colab Platform.
# Google Colab: https://colab.research.google.com/drive/1qnCKaUGUTF5vSRdPc7DI6y7b05P8_yuQ?usp=sharing#scrollTo=hopkwy2SzKBg

# This script was developed by Seojoon Lee, to be submitted for the JOHD.
# Co-author: Byungjun Kim, Corresponding Author: Bong Gwan Jun.


# part 1/3

import os
import subprocess
from google.colab import files
import gdown
import zipfile
import shutil

!git clone https://github.com/ultralytics/yolov5.git
!pip install -U git+https://github.com/ultralytics/yolov5.git
!pip install -r /content/yolov5/requirements.txt

weights_url = "https://drive.google.com/file/d/13nQ-ujmDfdmssMPzDWSfVydI_5IX_sYB/view?usp=share_link"
weights_path = "/content/weight_YOLOv5_FPC.pt"
gdown.download(weights_url, weights_path, quiet=False)



# part 2/3

# File Uploading (ZIP file), and then FPC Detection Process.

def main():
    print("This is YOLOv5_FPC Model")
    print("Please Upload a ZIP file containing images")

    os.makedirs("uploads", exist_ok=True)

    uploaded_files = files.upload()
    if uploaded_files:
        folder_name = list(uploaded_files.keys())[0]

        full_folder_path = os.path.join(os.getcwd(), folder_name)
        shutil.move(full_folder_path, os.path.join(os.getcwd(), "uploads", folder_name))

        extract_path = os.path.join("uploads", os.path.splitext(folder_name)[0])
        with zipfile.ZipFile(os.path.join("uploads", folder_name), "r") as zip_ref:
            zip_ref.extractall(extract_path)

        print("File Uploaded")
        print("Detecting Now . . . . .")

        os.chdir("/content/yolov5")

        subprocess.run(["chmod", "+x", "detect.py"])

        weights_path = "/content/weight_YOLOv5_FPC.pt"
        source_path = "/content/" + extract_path
        output_path = "/content/Output_folder"

        os.chdir("/content")
        command = f"python yolov5/detect.py --weights '{weights_path}' --source '{source_path}' --conf 0.6 --save-txt --project '{output_path}' --name result_images"
        completed_process = subprocess.run(command, shell=True, capture_output=True)
        print("Output:", completed_process.stdout.decode())
        print("Error:", completed_process.stderr.decode())

        if completed_process.returncode == 0:
            print("Detection is Finished. Please Check the Output Directory")
        else:
            print("Error has Occurred during this FPC Detection Process")

if __name__ == "__main__":
    main()



# part 3/3

# Downloading the Output File

output_path = "/content/Output_folder"
file_names_path = os.path.join(output_path, "result_images", "labels")
file_names = os.listdir(file_names_path)
source_folder = os.path.join(output_path, "result_images")
destination_folder = os.path.join(output_path, "FPC_model_detected_images")
os.makedirs(destination_folder, exist_ok=True)

for file_name in file_names:
    file_name = os.path.splitext(file_name)[0]

    if not file_name.lower().endswith(".jpg"):
        file_name = f"{file_name}.jpg"

    source_file = os.path.join(source_folder, file_name)
    destination_file = os.path.join(destination_folder, file_name)

    if os.path.exists(source_file):
        shutil.copy(source_file, destination_file)
        print(f"Copied {file_name} to {destination_folder}.")
    else:
        print(f"File {file_name} not found in {source_folder}")


shutil.make_archive("/content/FPC_model_detected_images", "zip", destination_folder)



# ZIP File Downloading Process

files.download("/content/FPC_model_detected_images.zip")
